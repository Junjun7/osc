# tomcat服务器端口
server.port=8083

# redis配置
spring.redis.host=120.78.159.149
spring.redis.port=${redis_port}
spring.redis.password=${redis_password}

# 日志
logging.config=classpath:logback.xml

# 微信通知配置
userIds=orPQ802BC_a-JkvaNTTQUoQWAs4kqO0pGk7RGY
template_id=lpO9UoVZYGENPpuND3FIofNueSMJZs0DMiU7Bl1eg2c

# 缓存
spring.cache.type=ehcache

# 数据库  逆向工程数据库表生成
# 逆向工程不能识别环境变量，即可生成的时候改回来
spring.datasource.url=jdbc:mysql://120.78.159.149:3306/seckill?useSSL=false
spring.datasource.username=${mysql_username}
spring.datasource.password=${mysql_password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# mybatis配置
mybatis.generate.java.target=src/main/java
mybatis.generate.resource.target=src/main/resources
#logging.level.com.gdufe.osc.dao.mapper.*=debug
## 多数据源，这配置就不适用了
#mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

# 数据库
spring.datasource.master.url=jdbc:mysql://120.78.159.149:3306/test?useSSL=false
spring.datasource.master.username=${mysql_username}
spring.datasource.master.password=${mysql_password}
spring.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver

# 数据库
spring.datasource.slave.url=jdbc:mysql://120.78.159.149:3306/test?useSSL=false
spring.datasource.slave.username=${mysql_username}
spring.datasource.slave.password=${mysql_password}
spring.datasource.slave.driver-class-name=com.mysql.cj.jdbc.Driver

# zk配置
zk.host=120.78.159.149:2181
zk.maxRetry=3
zk.sessionTimeout=60000
zk.connectTimeout=10000